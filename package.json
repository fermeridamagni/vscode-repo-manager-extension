{
  "name": "vscode-repo-manager-extension",
  "displayName": "Repo Manager",
  "description": "A comprehensive VS Code extension for managing packages in repositories and monorepos with enhanced release management and NPM publishing capabilities.",
  "version": "0.0.3",
  "license": "MIT",
  "icon": "resources/logo.png",
  "publisher": "magnidev",
  "author": {
    "name": "fermeridamagni <Magni Development>",
    "url": "https://github.com/fermeridamagni"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fermeridamagni/vscode-repo-manager-extension"
  },
  "bugs": {
    "url": "https://github.com/fermeridamagni/vscode-repo-manager-extension/issues"
  },
  "homepage": "https://github.com/fermeridamagni/vscode-repo-manager-extension#readme",
  "keywords": [
    "package management",
    "github releases",
    "npm publish",
    "conventional commits",
    "monorepo",
    "repository management"
  ],
  "categories": [
    "Other",
    "Programming Languages"
  ],
  "engines": {
    "vscode": "^1.100.2",
    "node": ">=20.0.0"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "repoManager",
          "title": "Repo Manager",
          "icon": "$(package)"
        }
      ]
    },
    "views": {
      "repoManager": [
        {
          "id": "repoManagerView",
          "name": "Packages",
          "icon": "$(package)",
          "when": "workspaceHasRepos || !workspaceHasRepos"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "repoManagerView",
        "contents": "No packages found in this workspace.\n\nTo get started:\n• Add a package.json file to your project\n• Or work in a workspace with Node.js packages\n\n[Refresh](command:repoManager.refresh)\n\n[Create package.json](command:npm.init)",
        "when": "!workspaceHasRepos"
      }
    ],
    "commands": [
      {
        "command": "repoManager.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "repoManager.createRelease",
        "title": "Create GitHub Release",
        "icon": "$(tag)"
      },
      {
        "command": "repoManager.publishNpm",
        "title": "Publish to NPM",
        "icon": "$(package)"
      },
      {
        "command": "repoManager.conventionalCommit",
        "title": "Conventional Commit",
        "icon": "$(git-commit)"
      },
      {
        "command": "repoManager.viewPackageDetails",
        "title": "View Package Details",
        "icon": "$(info)"
      },
      {
        "command": "repoManager.openPackageJson",
        "title": "Open package.json",
        "icon": "$(file-code)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "repoManager.refresh",
          "when": "view == repoManagerView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "repoManager.createRelease",
          "when": "view == repoManagerView && viewItem == package",
          "group": "release"
        },
        {
          "command": "repoManager.publishNpm",
          "when": "view == repoManagerView && viewItem == package",
          "group": "publish"
        },
        {
          "command": "repoManager.conventionalCommit",
          "when": "view == repoManagerView && viewItem == package",
          "group": "git"
        },
        {
          "command": "repoManager.viewPackageDetails",
          "when": "view == repoManagerView && viewItem == package",
          "group": "info"
        },
        {
          "command": "repoManager.openPackageJson",
          "when": "view == repoManagerView && viewItem == package",
          "group": "info"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run format && pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.15.26",
    "@types/semver": "^7.7.0",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.5",
    "eslint": "^9.27.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@octokit/rest": "^22.0.0",
    "semver": "^7.7.2",
    "simple-git": "^3.27.0"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "esbuild"
    ]
  }
}
